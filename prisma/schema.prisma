// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Budget {
  id        String    @id @default(cuid())
  year      Int       @default(2022) // on which year 
  cash      Int       @default(0)
  cost      Int       @default(0)
  start     DateTime?
  end       DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  itemId String
  item   Item   @relation(fields: [itemId], references: [id])

  @@index([itemId, year])
}

// 
model Item {
  id          String   @id @default(cuid())
  title       String
  slug        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  type   Type?   @relation(fields: [typeId], references: [id]) // type of this item
  typeId String?

  projects  Project[]
  trensform Transfer[]
  budgets   Budget[]

  @@index([title, slug])
}

model Project {
  id          String    @id @default(cuid())
  name        String
  slug        String?   @unique // tender number from etimad 
  reference   String?   @unique // refrence id from etimad
  description String?
  duration    String? // duration of this project in ex: "1 year",
  active      Boolean   @default(false)
  estimated   Int       @default(0) // estimated cost of this project
  cost        Int?      @default(0) // real cost for this project
  start       DateTime?
  end         DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  item   Item   @relation(fields: [itemId], references: [id]) // on which item this project is based on
  itemId String

  history   ProjectHistory[]
  documents Document[]

  @@index([name, slug, reference])
}

model ProjectHistory {
  id        String   @id @default(uuid())
  note      String?
  value     Int?     @default(0)
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  status    Status   @relation(fields: [statusId], references: [id])
  statusId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId, statusId])
}

model Status {
  id          String   @id @default(cuid())
  title       String   @unique
  description String?
  value       Int?     @default(0) // represante 0%, 10%, 20%
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  projects ProjectHistory[]

  @@index([title])
}

model Transfer {
  id        String   @id @default(cuid())
  cash      Int      @default(0) // + | - 
  cost      Int      @default(0) // + | -
  quarter   Int      @default(1)
  year      Int      @default(2022)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  itemId String
  item   Item   @relation(fields: [itemId], references: [id])

  @@index([quarter, itemId])
}

// item types && project types
model Type {
  id    String @id @default(cuid())
  value String @unique
  items Item[]

  @@index([value])
}

model User {
  id        String     @id @default(cuid())
  name      String
  username  String     @unique
  password  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  posts     Post[]
  comments  Comment[]
  document  Document[]
  Task      Task[]
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  pinned    Boolean   @default(false)
  published Boolean   @default(false)
  authorId  String?
  author    User?     @relation(fields: [authorId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  comments  Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  pinned    Boolean? @default(false)
  content   String
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Document {
  id        String   @id @default(cuid())
  title     String
  content   String?
  url       String?
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title, projectId])
}

// task
model Task {
  id        String   @id @default(cuid())
  title     String
  content   String?
  completed Boolean? @default(false)
  public    Boolean? @default(false)
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title])
}
